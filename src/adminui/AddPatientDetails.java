/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.dao.CommonDAO;
import model.dao.DiseaseInfoDAO;
import model.dao.PatientDiseaseDAO;
import model.dao.PatientInfoDAO;
import model.dao.PatientRoomDAO;
import model.dao.RoomInfoDAO;
import model.dao.RoomTypeDAO;
import model.to.DiseaseInfoTo;
import model.to.PatientDiseaseTo;
import model.to.PatientInfoTo;
import model.to.PatientRoomTo;
import model.to.RoomInfoTo;
import model.to.RoomTypeTo;
import utility.CommonOperations;
import utility.Validations;

/**
 *
 * @author HP
 */
public class AddPatientDetails extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddPatientDetails
     */
    ArrayList<DiseaseInfoTo> alldiseases = new ArrayList<DiseaseInfoTo>();

    public AddPatientDetails() {
        initComponents();
        setLocation(100, 60);
        jcbdiseaseid.removeAllItems();
        jcbdiseaseid.addItem("select any disease id");
        List<DiseaseInfoTo> disease = new DiseaseInfoDAO().getAllRecord();
        if (disease != null && disease.size() > 0) {
            for (DiseaseInfoTo dt : disease) {
                jcbdiseaseid.addItem(dt);
            }
        }
        jcbroomtype.removeAllItems();
        jcbroomtype.addItem("select any room type");
        List<RoomTypeTo> room = new RoomTypeDAO().getAllRecord();
        if (room != null && room.size() > 0) {
            for (RoomTypeTo rt : room) {
                jcbroomtype.addItem(rt);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfpatientname = new javax.swing.JTextField();
        jtfcontactno = new javax.swing.JTextField();
        jtfattendent = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfaddress = new javax.swing.JTextField();
        btnadmit = new javax.swing.JButton();
        cdpdob = new adminui.CurrentDatePanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableviewdiseases = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jtfhistory = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jcbroomtype = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jcbroomno = new javax.swing.JComboBox();
        jcbdiseaseid = new javax.swing.JComboBox();
        btnsave = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Add New Patient Details");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Enter Patient Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Enter Address");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Enter Attendent Name");

        jtfpatientname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jtfcontactno.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtfcontactno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfcontactnoKeyTyped(evt);
            }
        });

        jtfattendent.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Enter Date of Birth");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Enter Contact No.");

        jtfaddress.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        btnadmit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnadmit.setText("ADMIT PATIENT");
        btnadmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadmitActionPerformed(evt);
            }
        });

        tableviewdiseases.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableviewdiseases);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Choose Disease ID");

        jtfhistory.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Enter Disease History");

        jcbroomtype.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcbroomtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbroomtype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbroomtypeItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Available Rooms");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Choose Room Category");

        jcbroomno.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcbroomno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbdiseaseid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcbdiseaseid.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnsave.setText("ADD PATIENT");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jtfpatientname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                                                .addComponent(jtfcontactno, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jtfaddress, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(cdpdob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(55, 55, 55))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jcbroomno, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jcbroomtype, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtfattendent, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(177, 177, 177))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(btnadmit)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbdiseaseid, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfhistory, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfpatientname, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfcontactno, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbdiseaseid, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtfhistory, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cdpdob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfattendent, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbroomtype, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbroomno, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81)
                        .addComponent(btnadmit, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE))
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnadmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadmitActionPerformed
        String message = "";
        boolean allvalid = true;
        boolean setinfo = false;
        boolean setdisease = false;
        String patientname = jtfpatientname.getText().trim();
        String contactno = jtfcontactno.getText().trim();
        String attendent = jtfattendent.getText().trim();
        Date date = cdpdob.getSelectedDate();
        String address = jtfaddress.getText().trim();
        String history = jtfhistory.getText().trim();
        if (Validations.isEmpty(patientname)) {
            allvalid = false;
            message += "Please fill any value in patient name field \n\n";
        }
        if (Validations.isEmpty(contactno)) {
            allvalid = false;
            message += "Please fill any value in contact no field \n\n";
        } else if (contactno.length() != 10) {
            allvalid = false;
            message += "contact no must be of 10 digits \n\n";
        }
        if (Validations.isEmpty(attendent)) {
            allvalid = false;
            message += "Please fill any value in attendent field \n\n";
        }
        if (Validations.isEmpty(address)) {
            allvalid = false;
            message += "Please fill any value in address field \n\n";
        }
        if (cdpdob.getSelectedDate() == null) {
            allvalid = false;
            message += "Please choose a valid date of birth \n\n";
        }
        if (Validations.isEmpty(history)) {
            allvalid = false;
            message += "please enter patient history";
        }
        if (jcbroomtype.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please choose valid room type";
        }
        if (jcbroomno.getSelectedIndex() == 0) {
            allvalid = false;
            message += " Please choose valis roomno";
        }
        if (allvalid) {
            PatientInfoTo record = new PatientInfoTo();
            record.setPatient_name(patientname);
            record.setContact_no(contactno);
            record.setAttendent(attendent);
            record.setDate_of_birth(date);
            record.setAddress(address);
            PatientInfoDAO action = new PatientInfoDAO();
            if (action.insertRecord(record)) {
                setinfo = true;
            } else {
                allvalid = false;
                message += "Insertion failure:" + action.getErrormessage();
            }
        }
        int patient_id = new CommonDAO().getLastInsertId();
        if (setinfo) {
            for (DiseaseInfoTo dt : alldiseases) {
                PatientDiseaseTo record = new PatientDiseaseTo();
                record.setDisease_id(dt.getDisease_id());
                record.setDisease_name(dt.getDisease_name());
                record.setPatient_id(patient_id);
                record.setHistory(history);
                PatientDiseaseDAO action = new PatientDiseaseDAO();
                if (action.insertRecord(record)) {
                    setdisease = true;
                } else {
                    setinfo = false;
                    message = "insertion failure" + action.getErrormessage();
                }
            }
        }
        if (setdisease) {
            PatientRoomTo record = new PatientRoomTo();
            RoomInfoTo roomno = (RoomInfoTo) jcbroomno.getSelectedItem();
            record.setRoom_id(roomno.getRoom_no());
            record.setPatient_id(patient_id);
            RoomTypeTo roomtype = (RoomTypeTo) jcbroomtype.getSelectedItem();
            record.setAmount(0);
            //record.setAdmit_date(date);
            PatientRoomDAO action = new PatientRoomDAO();
            if (action.insertRecord(record)) {
                if (patient_id != 0) {
                    message = " new patient with patient id ( " + patient_id + " ) is added to system ";
                }
            } else {
                message = "insertion failure" + action.getErrormessage();
            }
        }
        if (allvalid) {
            JOptionPane.showMessageDialog(this, message);
        } else {
            JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnadmitActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        bindTableDetails();

    }//GEN-LAST:event_btnsaveActionPerformed

    private void jcbroomtypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbroomtypeItemStateChanged
        jcbroomno.removeAllItems();
        jcbroomno.addItem("select any room no.");
        if (jcbroomtype.getSelectedIndex() > 0) {
            RoomTypeTo roomtype = (RoomTypeTo) jcbroomtype.getSelectedItem();
            List<RoomInfoTo> room;
            room = new RoomInfoDAO().getAllRecord(roomtype.getType_id());
            if (room != null && room.size() > 0) {
                for (RoomInfoTo rt : room) {
                    jcbroomno.addItem(rt);
                }
            }
        }
    }//GEN-LAST:event_jcbroomtypeItemStateChanged

    private void jtfcontactnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfcontactnoKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfcontactnoKeyTyped

    private void bindTableDetails() {
        DiseaseInfoTo disease = (DiseaseInfoTo) jcbdiseaseid.getSelectedItem();
        int index = jcbdiseaseid.getSelectedIndex();
        System.out.println(index);
        DiseaseInfoTo diseases = new DiseaseInfoDAO().getRecord(disease.getDisease_id());
        alldiseases.add(diseases);
        String[] col_name = {"Disease id", "Disease name"};
        Object[][] records = null;
        if (alldiseases != null && alldiseases.size() > 0) {
            records = new Object[alldiseases.size()][col_name.length];
            int i = 0;
            for (DiseaseInfoTo dt : alldiseases) {
                records[i] = new Object[]{dt.getDisease_id(), dt.getDisease_name()
                };
                i++;
            }
        } else {
            records = new Object[1][col_name.length];
            records[0] = new Object[]{"no records found", "no records found"};
        }
        DefaultTableModel dtm = new DefaultTableModel(records, col_name) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableviewdiseases.setModel(dtm);
        jcbdiseaseid.removeItemAt(index);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadmit;
    private javax.swing.JButton btnsave;
    private adminui.CurrentDatePanel cdpdob;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcbdiseaseid;
    private javax.swing.JComboBox jcbroomno;
    private javax.swing.JComboBox jcbroomtype;
    private javax.swing.JTextField jtfaddress;
    private javax.swing.JTextField jtfattendent;
    private javax.swing.JTextField jtfcontactno;
    private javax.swing.JTextField jtfhistory;
    private javax.swing.JTextField jtfpatientname;
    private javax.swing.JTable tableviewdiseases;
    // End of variables declaration//GEN-END:variables

}
