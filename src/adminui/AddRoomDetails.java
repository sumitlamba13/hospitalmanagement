/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import model.dao.FloorInfoDAO;
import model.dao.RoomInfoDAO;
import model.dao.RoomTypeDAO;
import model.to.FloorInfoTo;
import model.to.RoomInfoTo;
import model.to.RoomTypeTo;
import utility.CommonOperations;
import utility.Validations;

/**
 *
 * @author HP
 */
public class AddRoomDetails extends javax.swing.JInternalFrame {

    /**
     * Creates new form RoomDetails
     */
    public AddRoomDetails() {
        initComponents();
        setSize(1000, 600);
        setLocation(350, 150);
        jcbfloorid.removeAllItems();
        jcbfloorid.addItem("select any floorID");
        jcbroomtype.removeAllItems();
        jcbroomtype.addItem("select any roomtype");
        List<FloorInfoTo> floor = new FloorInfoDAO().getAllRecord();
        if (floor != null && floor.size() > 0) {
            for (FloorInfoTo ft : floor) {
                jcbfloorid.addItem(ft);
            }
        }
        List<RoomTypeTo> room = new RoomTypeDAO().getAllRecord();
        if (room != null && room.size() > 0) {
            for (RoomTypeTo rt : room) {
                jcbroomtype.addItem(rt);
            }
        }
    }

    AddRoomDetails(RoomInfoTo record) {
        this();
        if (record != null) {
            jtfroomno.setText(record.getRoom_no());
            jtfnoofbeds.setText(String.valueOf(record.getNo_of_bed()));
            for (int i = 1; i < jcbfloorid.getItemCount(); i++) {
                FloorInfoTo floorid=(FloorInfoTo)jcbfloorid.getItemAt(i);
                if(floorid.getFloor_id().equals(record.getFloor_id())){
                    jcbfloorid.setSelectedIndex(i);
                    break;
                }
            }
            for(int i=1;i<jcbroomtype.getItemCount();i++){
                RoomTypeTo rt=(RoomTypeTo)jcbroomtype.getItemAt(i);
                if(rt.getType_id().equals(record.getRoom_type())){
                    jcbroomtype.setSelectedIndex(i);
                    break;
                }
            }
            setTitle("Edit room details");
            btnsave.setText("UPDATE ROOM DETAILS");
            jtfroomno.setEditable(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfnoofbeds = new javax.swing.JTextField();
        jtfroomno = new javax.swing.JTextField();
        jcbroomtype = new javax.swing.JComboBox();
        jcbfloorid = new javax.swing.JComboBox();
        btnsave = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Add New Room Detail");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Enter FLoor ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Enter Room No.");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Enter Room Type");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Enter No. of Beds");

        jtfnoofbeds.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtfnoofbeds.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfnoofbedsKeyTyped(evt);
            }
        });

        jtfroomno.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jcbroomtype.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcbroomtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbfloorid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcbfloorid.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnsave.setText("ADD NEW ROOM");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(341, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(151, 151, 151)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbroomtype, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfroomno, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbfloorid, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfnoofbeds, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfroomno, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbfloorid, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbroomtype, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfnoofbeds, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        String message = "";
        boolean allvalid = true;
        String roomno = jtfroomno.getText().trim();
        String noofbeds = jtfnoofbeds.getText().trim();
        if (jcbfloorid.getSelectedIndex() == 0) {
            message += "please select any floor \n\n";
            allvalid = false;
        }
        if (jcbroomtype.getSelectedIndex() == 0) {
            message += "Please select any room type \n\n";
            allvalid = false;
        }
        if (Validations.isEmpty(roomno)) {
            message = "Please fill any value in room no. field \n\n";
            allvalid = false;
        }
        if (Validations.isEmpty(noofbeds)) {
            allvalid = false;
            message += "Pleas enter no of beds";
        } else if (Validations.isNumeric(noofbeds)) {
            int no = Integer.parseInt(noofbeds);
            if (no < 0) {
                allvalid = false;
                message += "Please enter valid value in no of beds field";
            }
        } else {
            allvalid = false;
            message += "Please enter numeric valuer in no of beds field";
        }
        if (allvalid) {
            RoomInfoTo record = new RoomInfoTo();
            record.setRoom_no(roomno);
            record.setNo_of_bed(Integer.parseInt(noofbeds));
            FloorInfoTo floor = (FloorInfoTo) jcbfloorid.getSelectedItem();
            record.setFloor_id(floor.getFloor_id());
            RoomTypeTo room = (RoomTypeTo) jcbroomtype.getSelectedItem();
            record.setRoom_type(room.getType_id());
            RoomInfoDAO action = new RoomInfoDAO();
            if (btnsave.getText().contains("ADD")) {
                if (action.insertRecord(record)) {
                    message += " room type is added to the system database";
                    JInternalFrame[] allframe = getDesktopPane().getAllFrames();
                    if (allframe != null) {
                        for (JInternalFrame jif : allframe) {
                            if(jif instanceof ViewRooms){
                                ((ViewRooms)jif).bindTableDetails();
                                break;
                            }
                        }
                    }
                } else {
                    message += " Insertion failure" + action.getErrormessage();
                }
            } else if (btnsave.getText().contains("UPDATE")) {
                if (action.updateRecord(record)) {
                    message += " room type is updated in system database";
                } else {
                    message += " updation failure" + action.getErrormessage();
                }
                CommonOperations.openInternalFrame(getDesktopPane(), new ViewRooms());
                dispose();
            } else {
                message += "invalid operation";
            }
        }
        if (allvalid) {
            JOptionPane.showMessageDialog(this, message);
        } else {
            JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void jtfnoofbedsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfnoofbedsKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfnoofbedsKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox jcbfloorid;
    private javax.swing.JComboBox jcbroomtype;
    private javax.swing.JTextField jtfnoofbeds;
    private javax.swing.JTextField jtfroomno;
    // End of variables declaration//GEN-END:variables
}
