/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import model.dao.RoomTypeDAO;
import model.to.RoomTypeTo;
import utility.CommonOperations;
import utility.Validations;

/**
 *
 * @author HP
 */
public class AddRoomTypeDetails extends javax.swing.JInternalFrame {

    /**
     * Creates new form RoomTypeDetails
     */
    public AddRoomTypeDetails() {
        initComponents();
        setSize(1000, 600);
        setLocation(400, 100);
    }

    public AddRoomTypeDetails(String typeid) {
        this();
        RoomTypeTo record = new RoomTypeDAO().getRecord(typeid);
        if (record != null) {
            jtftypeid.setText(record.getType_id());
            jtftypename.setText(record.getType_name());
            jtfcharges.setText(String.valueOf(record.getCharges()));
            setTitle("Edit Room type details");
            btnsave.setText("UPDATE ROOM TYPE DETAILS");
            jtftypeid.setEditable(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtftypeid = new javax.swing.JTextField();
        jtfcharges = new javax.swing.JTextField();
        jtftypename = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Add new RoomType");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Enter Type Id");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Enter Type Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Enter Room Charges");

        jtftypeid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jtfcharges.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jtftypename.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnsave.setText("ADD NEW ROOM TYPE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtftypeid, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfcharges, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtftypename, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(245, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtftypename, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jtftypeid, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfcharges, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        String typeid = jtftypeid.getText();
        String typename = jtftypename.getText();
        String charges = jtfcharges.getText();
        String message = "";
        if (Validations.isEmpty(typeid) || Validations.isEmpty(typename) || Validations.isEmpty(charges)) {
            message += " Please fill all fields";
        } else if (Validations.isFLoat(charges)) {
            float chrgs = Float.parseFloat(charges);
            if (chrgs > 0) {
                RoomTypeTo record = new RoomTypeTo();
                record.setType_id(typeid);
                record.setType_name(typename);
                record.setCharges(chrgs);
                RoomTypeDAO action = new RoomTypeDAO();
                if (btnsave.getText().contains("ADD")) {
                if (action.insertRecord(record)) {
                    message += " Room type is added to the system database";
                    JInternalFrame[] allframe = getDesktopPane().getAllFrames();
                    if (allframe != null) {
                        for (JInternalFrame jif : allframe) {
                            if(jif instanceof ViewRoomType){
                                ((ViewRoomType)jif).bindTableDetails();
                                break;
                            }
                        }
                    }
                } else {
                    message += " Insertion failure" + action.getErrormessage();
                }
            } else if (btnsave.getText().contains("UPDATE")) {
                if (action.updateRecord(record)) {
                    message += " Room type is updated in system database";
                } else {
                    message += " updation failure" + action.getErrormessage();
                }
                CommonOperations.openInternalFrame(getDesktopPane(), new ViewRoomType());
                dispose();
            } else {
                message += "invalid operation";
            }   
            } else {
                message += " charges cannot be negative or zero";
            }

        } else {
            message += " Please enter numeric value in charges filed";
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnsaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jtfcharges;
    private javax.swing.JTextField jtftypeid;
    private javax.swing.JTextField jtftypename;
    // End of variables declaration//GEN-END:variables
}
