/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.util.List;
import javax.swing.JOptionPane;
import model.dao.PatientInfoDAO;
import model.dao.PatientRoomDAO;
import model.dao.RoomInfoDAO;
import model.dao.RoomTypeDAO;
import model.to.PatientInfoTo;
import model.to.PatientRoomTo;
import model.to.RoomInfoTo;
import model.to.RoomTypeTo;
import utility.CommonOperations;
import utility.Validations;

/**
 *
 * @author HP
 */
public class EditPatientRoom extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddPatientRoomDetails
     */
    int proom;
    float paid;

    public EditPatientRoom() {
        initComponents();
        setSize(1000, 750);
        setLocation(400, 100);
        jcbroomtype.removeAllItems();
        jcbroomtype.addItem("Choose room category");
        List<RoomTypeTo> room = new RoomTypeDAO().getAllRecord();
        if (room != null && room.size() > 0) {
            for (RoomTypeTo rt : room) {
                jcbroomtype.addItem(rt);
            }
        }
    }

    public EditPatientRoom(PatientRoomTo record) {
        this();
        if (record != null) {
            proom = record.getProom_id();
            paid = record.getAmount();
            jtfpatientid.setText(String.valueOf(record.getPatient_id()));
            RoomInfoTo room = new RoomInfoDAO().getRecord(record.getRoom_id());
            for (int i = 1; i < jcbroomtype.getItemCount(); i++) {
                RoomTypeTo rt = (RoomTypeTo) jcbroomtype.getItemAt(i);
                if (rt.getType_id().equals(room.getRoom_type())) {
                    jcbroomtype.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 1; i < jcbroom.getItemCount(); i++) {
                RoomInfoTo rt = (RoomInfoTo) jcbroom.getItemAt(i);
                if (rt.getRoom_no().equals(record.getRoom_id())) {
                    jcbroom.setSelectedIndex(i);
                    break;
                }
            }
            currentDatePanel.setDate(record.getAdmit_date());
            RoomTypeTo type = (RoomTypeTo) jcbroomtype.getSelectedItem();
            jlamonut.setText(String.valueOf(type.getCharges() - record.getAmount()));
            jtfpatientid.setEditable(false);
            float rem = Float.parseFloat(jlamonut.getText());
            if (rem == 0) {
                jtfamount.disable();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnedit = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        currentDatePanel = new adminui.CurrentDatePanel();
        jlamonut = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtfpatientid = new javax.swing.JTextField();
        jtfamount = new javax.swing.JTextField();
        jcbroom = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jcbroomtype = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setTitle("Update New Patient Room Details");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Enter Patient ID:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Choose Room ID:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Enter Admit Date:");

        btnedit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnedit.setText("Update Patient Room Details");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Enter Amount to Pay:");

        jlamonut.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Remaining Amount:");

        jtfpatientid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jtfamount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtfamount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfamountKeyTyped(evt);
            }
        });

        jcbroom.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcbroom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Choose Room Type:");

        jcbroomtype.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcbroomtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbroomtype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbroomtypeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbroom, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfpatientid)
                        .addComponent(jcbroomtype, 0, 361, Short.MAX_VALUE))
                    .addComponent(currentDatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfamount, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(407, 407, 407))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160)
                        .addComponent(jlamonut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(475, 475, 475))
            .addGroup(layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(btnedit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfpatientid, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbroomtype, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbroom, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(currentDatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfamount, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(jlamonut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(btnedit, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        String amount = jtfamount.getText().trim();
        String remaining = jlamonut.getText().trim();
        String message = "";
        boolean allvalid = true;
        if (Validations.isEmpty(amount)) {
            allvalid = false;
            message = "Please enter amount field";
        } else if (!Validations.isNumeric(amount)) {
            allvalid = false;
            message += "Please enter valid value in amount field";
        } else if (Float.parseFloat(amount) > Float.parseFloat(remaining)) {
            allvalid = false;
            message += "entered amount exceeds remaining amount ";
        }
        if (jcbroomtype.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please choose valid room category";
        }
        if (jcbroom.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please choose valid room no.";
        }
        if (allvalid) {
            float amt = paid + Float.parseFloat(amount);
            PatientRoomTo record = new PatientRoomTo();
            record.setAmount(amt);
            record.setAdmit_date(currentDatePanel.getSelectedDate());
            int pid = Integer.parseInt(jtfpatientid.getText());
            record.setPatient_id(pid);
            RoomInfoTo rooms = (RoomInfoTo) jcbroom.getSelectedItem();
            record.setRoom_id(rooms.getRoom_no());
            record.setProom_id(proom);
            RoomTypeTo type = (RoomTypeTo) jcbroomtype.getSelectedItem();
            if (amt == type.getCharges()) {
                record.setIspaid("yes");
            } else {
                record.setIspaid("No");
            }
            PatientRoomDAO action = new PatientRoomDAO();
            if (action.updateRecord(record)) {
                message = "Record is Updated successfully";

                CommonOperations.openInternalFrame(getDesktopPane(), new ViewPatients());
                dispose();
            } else {
                message = "Updation failure" + action.getErrormessage();
            }
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btneditActionPerformed

    private void jtfamountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfamountKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfamountKeyTyped

    private void jcbroomtypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbroomtypeItemStateChanged
        jcbroom.removeAllItems();
        jcbroom.addItem("select any room no.");
        if (jcbroomtype.getSelectedIndex() > 0) {
            RoomTypeTo roomtype = (RoomTypeTo) jcbroomtype.getSelectedItem();
            List<RoomInfoTo> room;
            room = new RoomInfoDAO().getAllRecord(roomtype.getType_id());
            if (room != null && room.size() > 0) {
                for (RoomInfoTo rt : room) {
                    jcbroom.addItem(rt);
                }
            }
        }
    }//GEN-LAST:event_jcbroomtypeItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnedit;
    private adminui.CurrentDatePanel currentDatePanel;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox jcbroom;
    private javax.swing.JComboBox jcbroomtype;
    private javax.swing.JLabel jlamonut;
    private javax.swing.JTextField jtfamount;
    private javax.swing.JTextField jtfpatientid;
    // End of variables declaration//GEN-END:variables
}
